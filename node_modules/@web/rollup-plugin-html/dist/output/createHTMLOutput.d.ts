import { GeneratedBundle, RollupPluginHTMLOptions, TransformHtmlFunction } from '../RollupPluginHTMLOptions.js';
import { EmittedFile } from 'rollup';
import { InputData } from '../input/InputData.js';
import { EmittedAssets } from './emitAssets.js';
export interface CreateHTMLAssetParams {
    outputDir: string;
    input: InputData;
    emittedAssets: EmittedAssets;
    generatedBundles: GeneratedBundle[];
    externalTransformHtmlFns: TransformHtmlFunction[];
    pluginOptions: RollupPluginHTMLOptions;
    defaultInjectDisabled: boolean;
    serviceWorkerPath: string;
    injectServiceWorker: boolean;
    absolutePathPrefix?: string;
    strictCSPInlineScripts: boolean;
}
export declare function createHTMLAsset(params: CreateHTMLAssetParams): Promise<EmittedFile>;
export interface CreateHTMLAssetsParams {
    outputDir: string;
    inputs: InputData[];
    emittedAssets: EmittedAssets;
    generatedBundles: GeneratedBundle[];
    externalTransformHtmlFns: TransformHtmlFunction[];
    pluginOptions: RollupPluginHTMLOptions;
    defaultInjectDisabled: boolean;
    serviceWorkerPath: string;
    injectServiceWorker: boolean;
    absolutePathPrefix?: string;
    strictCSPInlineScripts: boolean;
}
export declare function createHTMLOutput(params: CreateHTMLAssetsParams): Promise<EmittedFile[]>;
//# sourceMappingURL=createHTMLOutput.d.ts.map